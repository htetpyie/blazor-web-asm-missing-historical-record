@inject BookmarkService BookmarkService

<MudDrawer @bind-Open="@open" Width="100px" Fixed="true"
           ClipMode="DrawerClipMode.Docked"
           Anchor="Anchor.Start"
           Elevation="0"
           Variant="@DrawerVariant.Mini"
           Class="">
    <MudNavMenu Style="margin: 40px auto;">
        <MudNavLink Href="/"
                    Icon="@Icons.Material.Outlined.Home">
        </MudNavLink>
        <MudNavLink Href="/book-list"
                    Icon="@Icons.Material.Outlined.MenuBook">
        </MudNavLink>
        <MudMenu Icon="@Icons.Material.Outlined.Bookmark"
                 AnchorOrigin="Origin.TopRight"
                 Style="margin:15px auto 0 auto;">
            @if (BookmarkResponseList is not null)
            {
                <MudMenuItem AutoClose="false">
                    @foreach (var bookmark in BookmarkResponseList.BookmarkResponseList)
                    {
                        <MudNavGroup Title="@bookmark.BookTitle">
                            @foreach (var item in bookmark.BookmarkList)
                            {
                                <MudNavLink Href="/">Page No @item.PageNo</MudNavLink>
                            }
                        </MudNavGroup>
                    }
                </MudMenuItem>
            }
            else
            {
                <MudMenuItem>Nothing to show</MudMenuItem>
            }
        </MudMenu>
    </MudNavMenu>
</MudDrawer>

@code
{
    private BookmarkListResponseModel BookmarkResponseList { get; set; }
    bool open = true;

    void ToggleDrawer()
    {
        open = !open;
    }

    protected async override Task OnInitializedAsync()
    {
        BookmarkResponseList = await BookmarkService.GetBookmarkList();
    }
}