@inject BookService BookService

<MudDialog>
    <DialogContent>
        @if (Loading)
        {
            <MudProgressCircular Indeterminate="true"></MudProgressCircular>
        }
        else
        {
            if (Book is not null)
            {
                <MudImage Src="@Book.BookCover" />
                <div>@Book.BookAuthor</div>
                <div>@Book.BookDescription</div>
            }

        }
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Close">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public string BookId { get; set; } = string.Empty;
    [Parameter] public string BookCode { get; set; } = string.Empty;

    private bool Loading = false;
    private BookViewModel? Book { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Loading = true;
        Book = await BookService.GetBookData(GetBookDataModel());
        Loading = false;
    }

    void Close() => MudDialog.Close(DialogResult.Ok(true));

    private BookDataModel GetBookDataModel()
    {
        bool isValid = Guid.TryParse(BookId, out Guid BookIdGuid);
        if (!isValid) return new();

        return new BookDataModel
            {
                BookId = BookIdGuid,
                BookCode = BookCode
            };
    }
}
