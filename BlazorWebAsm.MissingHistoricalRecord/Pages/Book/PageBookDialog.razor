@inject BookService BookService

<MudDialog Style="font-size: 1rem;">
    <DialogContent>
        <div class="">
            @if (Loading)
            {
                <div class="d-flex justify-center">
                    <MudProgressCircular Indeterminate="true"></MudProgressCircular>
                </div>
            }
            else
            {
                if (Book is not null)
                {
                    <MudImage Src="@Book.BookCover" Width="200" Style="margin: 5px auto !important;" />
                    <table cellspacing="20" style="margin: auto; padding: 10px 5px;">
                        <tr>
                            <th style="font-family: 'CenturyBurma';font-weight: 500;letter-spacing: 1px;font-size: .9rem;">Author</th>
                            <td style="padding: 10px !important;">-</td>
                            <td style="font-family:'CenturyBurma';font-size: .8rem; margin-left:5px;">@Book.BookAuthor</td>
                        </tr>
                        <tr>
                            <th style="font-family: 'CenturyBurma';font-weight: 500;letter-spacing: 1px;font-size: .9rem;">Description</th>
                            <td style="padding: 10px !important;">-</td>
                            <td style="font-family:'CenturyBurma';font-size: .8rem; margin-left:5px;">@Book.BookDescription</td>
                        </tr>

                    </table>
                }
            }
        </div>
    </DialogContent>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public string BookId { get; set; } = string.Empty;
    [Parameter] public string BookCode { get; set; } = string.Empty;

    private bool Loading = false;
    private BookViewModel? Book { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Loading = true;
        Book = await BookService.GetBookData(GetBookDataModel());
        Loading = false;
    }

    void Close() => MudDialog.Close(DialogResult.Ok(true));

    private BookDataModel GetBookDataModel()
    {
        bool isValid = Guid.TryParse(BookId, out Guid BookIdGuid);
        if (!isValid) return new();

        return new BookDataModel
            {
                BookId = BookIdGuid,
                BookCode = BookCode
            };
    }
}
