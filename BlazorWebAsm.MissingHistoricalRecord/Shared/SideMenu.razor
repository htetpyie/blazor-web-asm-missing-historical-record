@inject BookmarkService BookmarkService
@inject BookmarkState BookmarkState
@implements IDisposable;

<div style="position:relative">
    <MudIconButton Icon="@(open ? Icons.Material.Filled.Close : Icons.Material.Filled.DoubleArrow)"
                   Color="@(open ?Color.Secondary : Color.Success )"
                   Edge="Edge.End" OnClick="@ToggleDrawer"
                   Style="@(open ? openMenuBtnLocation : closedMenuBtnLocation)" />
</div>
<MudDrawer @bind-Open="@open" Width="250px" Fixed="true"
           ClipMode="DrawerClipMode.Always"
           Anchor="Anchor.Start"
           Elevation="0"
           Variant="@DrawerVariant.Responsive"
           Style="margin-left:1px; border-radius: 10px; margin-right:3px;">

    <MudNavMenu Style="padding-top:40px !important;" Margin="Margin.Dense" Color="Color.Warning" Class="pa-2">
        <MudNavLink Match="NavLinkMatch.Prefix" Class="mhr-navlink rounded-b-lg" Icon="@Icons.Material.Outlined.Home" Href="/home">Home</MudNavLink>
        <MudNavLink Class="mhr-navlink" Icon="@Icons.Material.Outlined.MenuBook" Href="/book-list">All Books</MudNavLink>
        <MudNavGroup Class="mhr-navlink" Title="Bookmarks" Icon="@Icons.Material.Outlined.Bookmark">
            @if (BookmarkState.BookMarkList is not null)
            {
                @foreach (var bookmark in BookmarkState.BookMarkList.BookmarkResponseList)
                {
                    <MudNavGroup Title="@bookmark.BookTitle">
                        @foreach (var item in bookmark.BookmarkList)
                        {
                            string link = $@"/read-book/{bookmark.BookId}/{item.BookCode}/{item.PageNo}";
                            <MudNavLink OnClick="() => GoToLink(link)">Page No @item.PageNo</MudNavLink>
                        }
                    </MudNavGroup>
                }
            }
        </MudNavGroup>
        <MudNavGroup Class="mhr-navlink" Title="Wish List" Icon="@Icons.Material.Outlined.Favorite">
            @if (WishedBookState.WishBookListResponse is not null)
            {
                @foreach (var item in WishedBookState.WishBookListResponse.WishedBookList)
                {
                    string link = $@"/read-book/{item.BookId}/{item.BookCode}";
                    <MudNavLink OnClick="() => GoToLink(link)">@item.BookName</MudNavLink>
                }
            }
        </MudNavGroup>
    </MudNavMenu>
</MudDrawer>
@code
{
    private string bookListLink = "/book-list";
    private string homeLink = "/";
    bool open = true;

    private string openMenuBtnLocation = "z-index: 100000; position: fixed;top:70px; left:200px;";
    private string closedMenuBtnLocation = "z-index: 100000; position: fixed;top:70px; left:-10px;";

    void ToggleDrawer()
    {
        open = !open;
    }   

    protected async override Task OnInitializedAsync()
    {
        BookmarkState.BookMarkList = await BookmarkService.GetBookmarkList();
        WishedBookState.WishBookListResponse = await WishedBookService.GetWishBookList();
        BookmarkState.OnChange += BookmarkStateHasChanged;
        WishedBookState.OnChange += WishBookStateHasChanged;
    }

    private void GoToLink(string link)
    {
        _nav.NavigateTo(link);
    }

    void BookmarkStateHasChanged(object sender, EventArgs e) => StateHasChanged();
    void WishBookStateHasChanged(object sender, EventArgs e) => StateHasChanged();

    void IDisposable.Dispose()
    {
        BookmarkState.OnChange -= BookmarkStateHasChanged;
        WishedBookState.OnChange -= WishBookStateHasChanged;
    }
}